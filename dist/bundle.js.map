{"version":3,"sources":["webpack:///webpack/bootstrap 57313ccf0f9800ee8b52","webpack:///external \"React\"","webpack:///./src/components/GameOfLife.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/gameComponents/Cell.tsx","webpack:///./src/components/gameComponents/CellRow.tsx","webpack:///./src/components/index.tsx","webpack:///./src/models/Cell.ts","webpack:///./src/components/gameComponents/ButtonMenu.tsx","webpack:///./src/components/gameComponents/StatsNavbar.tsx"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 57313ccf0f9800ee8b52","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","import * as React from 'react';\r\nimport { Cell } from './gameComponents/Cell';\r\nimport { CellModel } from '../models/Cell';\r\nimport { CellRow } from './gameComponents/CellRow';\r\nimport { ButtonMenu } from './gameComponents/ButtonMenu';\r\nimport { StatsNavbar } from './gameComponents/StatsNavbar';\r\n\r\nexport interface IGameOfLifeProps\r\n{\r\n\r\n}\r\n\r\nexport interface IGameOfLifeState\r\n{\r\n    grid: Array<Array<CellModel>>;\r\n    gridCopy: Array<Array<CellModel>>;\r\n    speed: number;  //In milliseconds\r\n    size: number;\r\n    generation: number;\r\n}\r\n\r\n\r\nexport class GameOfLife extends React.Component<IGameOfLifeProps, IGameOfLifeState>\r\n{\r\n    interval: any = null;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        let newGrid: Array<Array<CellModel>> = [];\r\n        let newGridCopy: Array<Array<CellModel>> = [];\r\n        let defaultSize: number = 75;\r\n        let defaultSpeed: number = 50;\r\n\r\n        for (let i = 0; i < defaultSize; i++)\r\n        {\r\n            let row: Array<CellModel> = [];\r\n            let rowCopy: Array<CellModel> = [];\r\n\r\n            for (let j = 0; j < defaultSize; j++)\r\n            {\r\n                row.push(new CellModel());\r\n                rowCopy.push(new CellModel());\r\n            }\r\n\r\n            newGrid.push(row);\r\n            newGridCopy.push(rowCopy);\r\n        }\r\n\r\n        this.state = {\r\n            grid: newGrid,\r\n            gridCopy: newGridCopy,\r\n            speed: defaultSpeed,\r\n            size: defaultSize,\r\n            generation: 0\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n        this.randomizeBoard()\r\n        this.startGame();\r\n    }\r\n\r\n    setGameSpeed = (event: any) => \r\n    {\r\n        let buttonValue = event.target.value;\r\n        let newSpeed: number = -1;\r\n\r\n        if (buttonValue === \"Slow\")\r\n        {\r\n            newSpeed = 400;\r\n        }\r\n        else if (buttonValue === \"Medium\")\r\n        {\r\n            newSpeed = 250;\r\n        }\r\n        else if (buttonValue === \"Fast\")\r\n        {\r\n            newSpeed = 50;\r\n        }\r\n        else if (buttonValue === \"Warp Speed\")\r\n        {\r\n            newSpeed = 0;\r\n        }\r\n\r\n        this.setState({\r\n            speed: newSpeed\r\n        }, () => {\r\n            //If game is running after we set new speed,\r\n            //pause the game(clear the current interval) and start the game again\r\n            //with new interval\r\n            if (this.interval)\r\n            {\r\n                this.pauseGame();\r\n                this.startGame();\r\n            }\r\n        });\r\n    }\r\n\r\n    setGridSize = (event: any) =>\r\n    {\r\n        let newGrid: Array<Array<CellModel>> = [];\r\n        let newGridCopy: Array<Array<CellModel>> = [];\r\n        let buttonValue = event.target.value;\r\n        let gridSize: number = -1;\r\n\r\n        if (this.interval)\r\n        {\r\n            this.pauseGame();\r\n        }\r\n\r\n        if (buttonValue === \"Small\")\r\n        {\r\n            gridSize = 25;\r\n        }\r\n        else if (buttonValue === \"Medium\")\r\n        {\r\n            gridSize = 40;\r\n        }\r\n        else if (buttonValue === \"Large\")\r\n        {\r\n            gridSize = 75;\r\n        }\r\n        else if (buttonValue === \"Massive\")\r\n        {\r\n            gridSize = 100;\r\n        }\r\n\r\n        for (let i = 0; i < gridSize; i++)\r\n        {\r\n            let row: Array<CellModel> = [];\r\n            let rowCopy: Array<CellModel> = [];\r\n\r\n            for (let j = 0; j < gridSize; j++)\r\n            {\r\n                row.push(new CellModel());\r\n                rowCopy.push(new CellModel());\r\n            }\r\n\r\n            newGrid.push(row);\r\n            newGridCopy.push(rowCopy);\r\n        }\r\n\r\n        this.setState({\r\n                grid: newGrid,\r\n                gridCopy: newGridCopy,\r\n                size: gridSize,\r\n                generation: 0\r\n        });\r\n    }\r\n\r\n    pauseGame = () =>\r\n    {\r\n        clearInterval(this.interval);\r\n        this.interval = null;\r\n    }\r\n\r\n    startGame = () =>\r\n    {\r\n\r\n        if (this.interval !== null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.interval = setInterval(() => {\r\n            //Set a copy of the current grid\r\n             let nextGenGrid: Array<Array<CellModel>> = this.state.gridCopy;\r\n\r\n            //Iterate through all the cells on the grid\r\n            for (let r = 0; r < this.state.grid.length; r++)\r\n            {\r\n               for (let c = 0; c < this.state.grid[0].length; c++)\r\n               {                  \r\n                   nextGenGrid[r][c].updateCell(this.state.grid, r, c);                                  \r\n               }\r\n            }\r\n\r\n            let updatedGrid: Array<Array<CellModel>> = this.updateGrid(nextGenGrid);\r\n\r\n            this.setState({\r\n                grid: updatedGrid,\r\n                gridCopy: nextGenGrid,\r\n                generation: this.state.generation + 1\r\n            });\r\n\r\n        }, this.state.speed);\r\n    }\r\n\r\n    updateGrid = (gridCopy: Array<Array<CellModel>>) => {\r\n        let newCurrentGrid: Array<Array<CellModel>> = this.state.grid;\r\n\r\n        //Loop through the current copy of the grid and copy its values to the current grid\r\n        for (let r = 0; r < newCurrentGrid.length; r++)\r\n        {\r\n            for (let c = 0; c < newCurrentGrid[0].length; c++)\r\n            {\r\n                newCurrentGrid[r][c].isAlive = gridCopy[r][c].isAlive;\r\n                newCurrentGrid[r][c].age = gridCopy[r][c].age;\r\n            }\r\n        }\r\n\r\n        return newCurrentGrid;\r\n    }\r\n\r\n    clearBoard = () => \r\n    {\r\n        if (this.interval)\r\n        {\r\n            this.pauseGame();\r\n        }\r\n\r\n        let cleanGrid: Array<Array<CellModel>> = this.state.grid;\r\n        let cleanGridCopy: Array<Array<CellModel>> = this.state.gridCopy;\r\n\r\n        for (let r = 0; r < this.state.size; r++)\r\n        {\r\n            for (let c = 0; c < this.state.size; c++)\r\n            {\r\n                //Reset grid and its copy to default values\r\n                cleanGrid[r][c].isAlive = false;\r\n                cleanGrid[r][c].age = 0;\r\n\r\n                cleanGridCopy[r][c].isAlive = false;\r\n                cleanGridCopy[r][c].age = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            grid: cleanGrid,\r\n            gridCopy: cleanGridCopy,\r\n            generation: 0\r\n        });\r\n    }\r\n\r\n    randomizeBoard = () =>\r\n    {\r\n        this.clearBoard();\r\n        \r\n        let newBoard: Array<Array<CellModel>> = this.state.grid;\r\n        let newBoardCopy: Array<Array<CellModel>> = this.state.gridCopy;\r\n\r\n        for (let r = 0; r < this.state.grid.length; r++)\r\n        {\r\n            for (let c = 0; c < this.state.grid[r].length; c++)\r\n            {\r\n                if (Math.random() < 0.4)\r\n                {\r\n                    newBoard[r][c].isAlive = true;\r\n                    newBoardCopy[r][c].isAlive = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            grid: newBoard,\r\n            gridCopy: newBoardCopy\r\n        });\r\n\r\n    }\r\n\r\n    toggleLife = (rowPos: number, colPos: number) =>\r\n    {\r\n        let newGrid = this.state.grid;\r\n        let newGridCopy = this.state.gridCopy;\r\n\r\n        newGrid[rowPos][colPos].isAlive = !newGrid[rowPos][colPos].isAlive;\r\n        newGridCopy[rowPos][colPos].isAlive = !newGridCopy[rowPos][colPos].isAlive;\r\n\r\n        this.setState({\r\n            grid: newGrid,\r\n            gridCopy: newGridCopy            \r\n        });     \r\n    }\r\n\r\n    render() {\r\n\r\n        let keyCounter = 0;\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <StatsNavbar generation={this.state.generation}\r\n                             size={this.state.size}\r\n                             speed={this.state.speed}/>\r\n                <table>\r\n                    <tbody>\r\n                   {\r\n                       this.state.grid.map((rows, rowIndex) => \r\n                               <CellRow key={rowIndex + 1}>{rows.map((cell, colIndex) => \r\n                                   <Cell key={keyCounter++} toggleLife={this.toggleLife}\r\n                                    rowPos={rowIndex} colPos={colIndex}\r\n                                    gridSize={this.state.size} {...cell}/>)}</CellRow>)\r\n                   }\r\n                   </tbody>\r\n                </table>\r\n                <ButtonMenu startGame={this.startGame}\r\n                            pauseGame={this.pauseGame}\r\n                            setGridSize={this.setGridSize}\r\n                            setGameSpeed={this.setGameSpeed}\r\n                            clearBoard={this.clearBoard}\r\n                            randomizeBoard={this.randomizeBoard} />\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/GameOfLife.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 2\n// module chunks = 0","import * as React from 'react';\r\nimport { IGameOfLifeState } from '../GameOfLife';\r\n\r\nexport interface ICellProps\r\n{\r\n    isAlive: boolean;\r\n    age: number;\r\n    rowPos: number;\r\n    colPos: number;\r\n    gridSize: number;\r\n    \r\n    toggleLife(rowPos: number, colPos: number);\r\n}\r\n\r\n\r\nexport class Cell extends React.Component<ICellProps, {}>\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    toggleLife = () => {\r\n        \r\n        //this.props.toggleLife(this.props.rowPos, this.props.colPos);\r\n        this.props.toggleLife(this.props.rowPos, this.props.colPos);\r\n    }\r\n\r\n   shouldComponentUpdate(nextProps, nextState)\r\n   {\r\n       if (this.props.isAlive === nextProps.isAlive &&\r\n           this.props.age === nextProps.age)\r\n       {\r\n           return false;\r\n       }\r\n\r\n       return true;\r\n   }\r\n\r\n\r\n    render()    \r\n    {\r\n        \r\n            return(\r\n            <td className={this.props.gridSize === 120 ? \"cell-small\" : \"cell\"}\r\n            onClick={this.toggleLife} \r\n            style={this.props.isAlive === true ? this.props.age >= 1 ? {\"backgroundColor\": \"red\"} : {\"backgroundColor\": \"#ff6666\"} : null}/>\r\n        ); \r\n    }         \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/Cell.tsx","import * as React from 'react';\r\n\r\nexport interface ICellRowProps\r\n{\r\n    children?: any;\r\n}\r\n\r\nexport function CellRow(props: ICellRowProps)\r\n{\r\n    return(\r\n        <tr>\r\n            {props.children}\r\n        </tr>\r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/CellRow.tsx","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { GameOfLife } from \"./GameOfLife\";\r\n\r\nReactDOM.render(<GameOfLife />, document.getElementById(\"app\"));\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.tsx","export class CellModel\r\n{\r\n     isAlive: boolean;\r\n     age: number;\r\n\r\n    constructor(isAlive: boolean = false)\r\n    {\r\n        this.isAlive = isAlive;\r\n          \r\n        this.age = 0;\r\n    }\r\n\r\n\r\n    private updateCellState(neighbors: number): void\r\n    {\r\n        if (this.isAlive && (neighbors === 2 || neighbors == 3))\r\n        {\r\n            this.age++;\r\n            return;\r\n        }\r\n        if (!this.isAlive && neighbors === 3)\r\n        {\r\n            this.isAlive = true;\r\n        }\r\n        else if (neighbors > 3 || neighbors <= 1)\r\n        {\r\n            this.isAlive = false;\r\n            this.age = 0;\r\n        }\r\n    }\r\n\r\n    updateCell(currentGrid: Array<Array<CellModel>>, y: number, x: number): void\r\n    {\r\n        let neighbors: number = 0;\r\n\r\n        //Check right \r\n        try\r\n        {\r\n            if (currentGrid[y][x + 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}           \r\n\r\n        //Check top right\r\n        try\r\n        {\r\n            if (currentGrid[y - 1][x + 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}        \r\n\r\n        //Check Top\r\n        try\r\n        {\r\n            if (currentGrid[y - 1][x].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}       \r\n\r\n        //Check Top left\r\n        try\r\n        {\r\n            if (currentGrid[y - 1][x - 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}\r\n        \r\n        //Check Bottom Right\r\n        try\r\n        {\r\n            if (currentGrid[y + 1][x + 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}\r\n        \r\n        //Check Bottom\r\n        try\r\n        {\r\n            if (currentGrid[y + 1][x].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}\r\n        \r\n        //Check Bottom Left\r\n        try\r\n        {\r\n            if(currentGrid[y + 1][x - 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}\r\n    \r\n        //Check Left\r\n        try\r\n        {\r\n            if (currentGrid[y][x - 1].isAlive)\r\n            {\r\n                neighbors++;\r\n            }\r\n        }\r\n        catch (exception) {}\r\n        \r\n        this.updateCellState(neighbors);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Cell.ts","import * as React from 'react';\r\n\r\nexport interface IButtonMenuProps\r\n{\r\n    startGame();\r\n    pauseGame();\r\n    setGridSize(event: any);\r\n    setGameSpeed(event: any);\r\n    clearBoard();\r\n    randomizeBoard();\r\n}\r\n\r\nexport function ButtonMenu(props: IButtonMenuProps)\r\n{\r\n    return(\r\n            <div id=\"buttonArea\" className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                    <h6>Start/Stop</h6>           \r\n                    <button className=\"btn btn-secondary\" onClick={props.startGame}>Start</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.pauseGame}>Pause</button>\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <h6>Board Size</h6>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGridSize} value=\"Small\">Small</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGridSize} value=\"Medium\">Medium</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGridSize} value=\"Large\">Large</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGridSize} value=\"Massive\">Massive</button>\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <h6>Game Speed</h6>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGameSpeed} value=\"Slow\">Slow</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGameSpeed} value=\"Medium\">Medium</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGameSpeed} value=\"Fast\">Fast</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.setGameSpeed} value=\"Warp Speed\">Warp Speed</button>\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <h6>Clear/Randomize</h6>\r\n                    <button className=\"btn btn-secondary\" onClick={props.clearBoard}>Clear Board</button>\r\n                    <button className=\"btn btn-secondary\" onClick={props.randomizeBoard}>Randomize</button> \r\n                </div>                                                                \r\n            </div>                           \r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/ButtonMenu.tsx","import * as React from 'react';\r\n\r\nexport interface IStatsNavbarProps\r\n{\r\n    generation: number;\r\n    size: number;\r\n    speed: number;\r\n}\r\n\r\nexport function StatsNavbar(props: IStatsNavbarProps)\r\n{\r\n    let speed: string = \"\";\r\n    let size: string = \"\";\r\n\r\n    switch (props.size)\r\n    {\r\n        //small\r\n        case 25:\r\n            size = \"Small\";\r\n            break;\r\n        //medium\r\n        case 40:\r\n            size = \"Medium\"\r\n            break;\r\n        //large\r\n        case 75:\r\n            size = \"Large\";\r\n            break;\r\n        //massive\r\n        case 100:\r\n            size = \"Massive\";\r\n            break;\r\n    }\r\n\r\n    switch (props.speed)\r\n    {\r\n        //slow\r\n        case 400:\r\n            speed = \"Slow\";\r\n            break;\r\n        //medium\r\n        case 250:\r\n            speed = \"Medium\";\r\n            break;\r\n        //fast\r\n        case 50:\r\n            speed = \"Fast\";\r\n            break;\r\n        //warp speed\r\n        case 0:\r\n            speed = \"Warp Speed\";\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar fixed-top navbar-toggleable-md navbar-inverse bg-inverse\">\r\n            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a className=\"navbar-brand\" href=\"#\">Conway's Game of Life</a>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        Generation: <span className=\"statValue\">{props.generation}&nbsp;</span>\r\n                    </li>\r\n                    <li className=\"nav-item active\">\r\n                        Game Size: <span className=\"statValue\">{size}&nbsp;</span>\r\n                    </li>\r\n                    <li className=\"nav-item active\">\r\n                        Game Speed: <span className=\"statValue\">{speed}&nbsp;</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/StatsNavbar.tsx"],"sourceRoot":""}